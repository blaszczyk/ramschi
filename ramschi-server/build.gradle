plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.github.blaszczyk.ramschi'
version = '1.4.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.liquibase:liquibase-core'
	implementation 'com.drewnoakes:metadata-extractor:2.19.0'
	implementation 'org.imgscalr:imgscalr-lib:4.2'
	implementation 'com.google.cloud.sql:postgres-socket-factory:1.25.0'
	implementation 'com.google.cloud.sql:cloud-sql-connector-r2dbc-postgres:1.25.0'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar.archiveFileName = "${rootProject.name}.jar"

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	staticWebDir = "${projectDir}/src/main/resources/static"
}

tasks.register('retrieveUi', Sync) {
	description "Retrieve UI distribution files."
	group "Build"
	def localFrontend = '../ramschi-ui/dist/ramschi-ui/browser/'

	from localFrontend
	into staticWebDir
	doLast {
		println "Fetching UI distribution" + localFrontend
	}
}

tasks.register('cleanUi', Delete) {
	description "Clear UI distribution files."
	group "Build"
	delete staticWebDir
}

processResources.dependsOn([
		retrieveUi
])

clean.dependsOn([
		cleanUi
])
